[crusoe]
log_path = /var/log/crusoe/
key_path = /root/.ssh/id_rsa_crusoe
passphrase = {{ flowmon_ssh_passphrase }}
tmp = /tmp/

[neo4j]
address = "bolt://localhost:7687"
password = {{ neo4j_password }}
import = /var/lib/neo4j/import/

[flowmon]
user = flowmon
hostname = collector.domain
nfdump_path = /usr/local/bin/nfdump
dir_param = -M /data/nfsen/profiles-data/live/
collectors = ["p4000", "p4002"]
tmp_dir = /tmp/flows
local_flows_dir = /tmp/flows
out_aggregate = 
out_filter = 'src net 10.10.0.0/16 and not dst net 10.10.0.0/16'
out_format = -o 'fmt:%%ts;%%te;%%pr;%%sa;%%sp;%%da;%%dp;%%pkt;%%byt;%%fl;%%bpp;%%ndavg;%%ndmin;%%ndmax;%%tos;%%hos;%%hosmaj;%%hosmin;%%hosbld;%%tcpwinsize;%%tcpsynsize;%%tcpttl;%%hhost;%%dnsqname;%%hurl;'
out_format_for_nfdump = -o 'fmt:%ts;%te;%pr;%sa;%sp;%da;%dp;%pkt;%byt;%fl;%bpp;%ndavg;%ndmin;%ndmax;%hos;%hosmaj;%hosmin;%hosbld;%tcpwinsize;%tcpsynsize;%tcpttl;%hhost;%dnsqname;%hurl;'
out_remote_file_path = /home/flowmon/analysis/crusoe_out.csv
out_local_file_prefix = out_
out_last_file = /data/flow/out_202007221335.json
in_filter = 'dst net 10.10.0.0/16 and (dst port 80 or dst port 443)'
in_aggregate = -A hhost,dstip,dstport
in_format = -o'fmt:%%ts;%%te;%%da;%%dp;%%pkt;%%byt;%%fl;%%hhost;'
in_format_for_nfdump = -o'fmt:%ts;%te;%da;%dp;%pkt;%byt;%fl;%hhost;'
in_remote_file_path = /home/flowmon/analysis/crusoe_in.csv
in_local_file_prefix = in_
in_last_file =

[os]
file = os.json

[service]
output = service.json
target_network = ["10.10.0.0/16"]
si_model = /var/tmp/crusoe/si_model.pkl
si_dataset = /usr/share/crusoe/si_dataset.csv

[sabu]
directory = /var/warden_receiver/incoming/
path = /opt/warden_client/warden_filer_receiver
regex = 10\.10\.[0-2]?[0-9]?[0-9]\.[0-2]?[0-9]?[0-9]?

[nmap-topology-scanner]

[rtir-connector]
user = {{ rtir_user }}
password = {{ rtir_password  }}
file = rtir.json

[cve-connector]
tmp_cve_subdir = cve-data
tmp_ms_subdir = ms_downloads

[shadowserver]
user = {{ shadowserver_user }}
password = {{ shadowserver_password }}
json_name = shadow.json

[shodan]
config_file = /opt/celery/config/Shodan_config.json
api_key = {{ shodan_api_key }}
subnets = ["10.10.0.0/16"]
json_name = shodan.json

[webchecker]
target_network = ["10.10.0.0/16"]
ignore = ["10.10.10.0/24"]
domain_file = domain.json
cert_file = cert.json

[cms]
whatweb_path = /opt/whatweb/whatweb
tmp = /tmp/hosts.txt
params = -q
json_name = cms.json
