- name: Delete Debian deb-src backports repository URL in sources list - bug with apt update
  lineinfile:
    path: /etc/apt/sources.list
    state: absent
    backrefs: yes
    regexp: "^(.*https://deb.debian.org/debian buster-backports main.*)$"
  become: yes
  register: deb_archive_changed
  
- name: Install nvm
  shell: >
    curl https://raw.githubusercontent.com/creationix/nvm/v0.7.0/install.sh | sh
    creates={{ ansible_env.HOME }}/.nvm/nvm.sh

- name: Install node and set version
  shell: >
    /bin/bash -c "source ~/.nvm/nvm.sh && nvm install {{ node_version }} && nvm alias default {{ node_version }}"
    creates={{ ansible_env.HOME }}/.nvm/alias

- name: Create a symlink to node and npm for ansible
  file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  loop:
    - {src: "{{ nvm_bin }}/node", dest: "/usr/bin/node"}
    - {src: "{{ nvm_bin }}/npm", dest: "/usr/bin/npm"}
  become: yes

- name: Create dashboard folder
  file:
    path: "{{ dashboard_folder }}"
    state: 'directory'
    mode: '0755'

# Copy source files to the VM
- name: Copy dashboard source files to VM
  copy:
    src: "../../../"
    dest: "{{ dashboard_folder }}"

- name: Stop apache2 before nginx installation to avoid conflict on binded ports
  service:
    name: apache2
    state: stopped
  become: yes
  ignore_errors: yes
  register: apache2_stopped

# Install nginx web server
- name: Install nginx
  apt:
    name: nginx
    state: present
    update_cache: yes
  become: yes

- name: Delete port config
  lineinfile:
    path: /etc/nginx/sites-enabled/default
    regexp: "^#(.*)listen 80(.*)$"
    state: absent
  become: yes

- name: Delete port config
  lineinfile:
    path: /etc/nginx/sites-enabled/default
    regexp: "^#(.*)listen [::]:80(.*)$"
    state: absent
  become: yes

- name: Change config to start nginx on port 81
  lineinfile:
    path: /etc/nginx/sites-enabled/default
    regexp: "^(.*)listen 80(.*)$"
    line: "\tlisten 81 default_server;"
  become: yes

- name: Change config to start nginx on port 81 for ipv6
  lineinfile:
    path: /etc/nginx/sites-enabled/default
    regexp: "^(.*)listen [::]:80(.*)$"
    line: "\tlisten [::]:81 default_server"
  become: yes

- name: Create environment folder
  file:
    path: "{{ dashboard_folder }}/src/environments"
    state: 'directory'
    mode: '0755'

# Copy environment file where REST API urls are defined
- name: Copy environment file
  template:
    src: environment.prod.ts.j2
    dest: '{{ dashboard_folder }}/src/environments/environment.prod.ts'

# Install Dashboard dependencies
- name: Install Dashboard dependencies
  npm:
    path: '{{ dashboard_folder }}'

# Build application using Angular-CLI
- name: Build application
  command: 'npm run build'
  args:
    chdir: '{{ dashboard_folder }}'
    creates: '{{ dashboard_folder }}/dist'

# Copy nginx config
- name: Copy Nginx conf file
  template:
    src: 'dashboard.conf'
    dest: /etc/nginx/nginx.conf
  become: yes

# Create folder for Dashboard files in /var/www/
- name: Create dashboard folder in /var/www/
  command: 'mkdir /var/www/dashboard'
  become: yes

# Copy Dashboard files
- name: Copy dashboard files
  command: 'cp -a {{ dashboard_folder }}/dist/. /var/www/dashboard/'
  become: yes


# Start nginx web server
- name: start nginx
  service:
    name: nginx
    state: started

# Reload nginx
- name: Reload nginx
  service:
    name: nginx
    state: reloaded
  become: yes
